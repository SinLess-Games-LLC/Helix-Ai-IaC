apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: prometheus-stack
  namespace: monitoring
spec:
  interval: 1h
  chart:
    spec:
      version: "57.x.x"
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 1h
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  driftDetection:
    mode: enabled
    ignore:
      # Ignore "validated" annotation which is not inserted during install
      - paths: [ "/metadata/annotations/prometheus-operator-validated" ]
        target:
          kind: PrometheusRule
  valuesFrom:
    - kind: ConfigMap
      name: flux-kube-state-metrics-config
      valuesKey: kube-state-metrics-config.yaml
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    alertmanager:
      enabled: false
      replicas: 1
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - "alertmanager.${SECRET_DOMAIN}"
        tls:
          - secretName: helixaibot-com-production-tls
            hosts:
              - "alertmanager.${SECRET_DOMAIN}"
    
    prometheusOperator:
      enabled: true
      certMandager:
        enabled: true
        issuerRef:
          name: letsencrypt-production
          kind: ClusterIssuer
      clusterDomain: ${SECRET_DOMAIN}

    prometheus:
      enabled: true
      replicas: 2
      thanosService:
        enabled: true
        thanosServiceMonitor:
          enabled: true
      resources:
        requests:
          cpu: 200m
        limits:
          cpu: 400m
      prometheusSpec:
        retention: 24h
        podMonitorNamespaceSelector: { }
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/component: monitoring
      volumeMounts: []
        # - name: config-volume
        #   configMap:
        #     name: istio-prometheus
      ingress:
        enabled: true
        hosts:
          - "prometheus.${SECRET_DOMAIN}"
        tls:
          - secretName: helixaibot-com-production-tls
            hosts:
              - "prometheus.${SECRET_DOMAIN}"

    prometheus-node-exporter:
      prometheus:
        monitor:
          enabled: true

    grafana:
      enabled: false
      defaultDashboardsEnabled: true
      defaultDashboardsTimezone: ${TIMEZONE}
      resources:
        requests:
          cpu: 100m
        limits:
          cpu: 200m
      autoscaling:
        enabled: false
        minReplicas: 2
        maxReplicas: 5
        targetCPU: 80
        targetMemory: 80
      admin:
        existingSecret: grafana-login
        userKey: admin-user
        passwordKey: admin-password
      ingress:
        enabled: true
        ingressClassName: external
        hosts:
          - "grafana.${SECRET_DOMAIN}"
        tls:
          - secretName: helixaibot-com-production-tls
            hosts:
              - "grafana.${SECRET_DOMAIN}"

      
