apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 1h
  chart:
    spec:
      version: "55.x"
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
      interval: 1h
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  driftDetection:
    mode: enabled
    ignore:
      # Ignore "validated" annotation which is not inserted during install
      - paths: [ "/metadata/annotations/prometheus-operator-validated" ]
        target:
          kind: PrometheusRule
  valuesFrom:
  - kind: ConfigMap
    name: flux-kube-state-metrics-config
    valuesKey: kube-state-metrics-config.yaml
  # https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml
  values:
    alertmanager:
      replicas: 1
      enabled: true
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - "alertmanager.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "alertmanager.${SECRET_DOMAIN}"

    prometheus:
      replicas: 1
      prometheusSpec:
        retention: 24h
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        podMonitorNamespaceSelector: { }
        podMonitorSelector:
          matchLabels:
            app.kubernetes.io/component: monitoring
      volumeMounts:
        - name: config-volume
          configMap:
            name: istio-prometheus
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - "prometheus.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "prometheus.${SECRET_DOMAIN}"

    grafana:
      replicas: 1
      defaultDashboardsEnabled: true
      defaultDashboardsTimezone: ${TIMEZONE}
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 200m
          memory: 256Mi
      autoscaling:
        enabled: true
        minReplicas: 1
        maxReplicas: 5
        targetCPU: 80
        targetMemory: 80
      admin:
        existingSecret: grafana-login
        userKey: admin-user
        passwordKey: admin-password
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - "grafana.${SECRET_DOMAIN}"
        tls:
          - hosts:
              - "grafana.${SECRET_DOMAIN}"
      plugins:
        - digrich-bubblechart-panel
        - grafana-piechart-panel
        - grafana-worldmap-panel
        - grafana-clock-panel
        - grafana-simple-json-datasource
        - grafana-kubernetes-app
        - grafana-heatmap
      
