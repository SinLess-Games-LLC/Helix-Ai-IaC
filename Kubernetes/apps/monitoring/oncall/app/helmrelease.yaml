---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: grafana-oncall
  namespace: monitoring
spec:
  interval: 30m
  chart:
    spec:
      version: 1.3.106
      chart: oncall
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    baseurl: ${SECRET_DOMAIN}
    base_url_protocol: https

    #TODO: Figure out why the ingress defaults to example.com
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: internal
        issuer: letsencrypt-production
      className: internal 
      tls: 
        - hosts:
          - oncall.${SECRET_DOMAIN}
          secretName: helixaibot-com-production-tls

    ingress-nginx:
      enabled: true
    
    # TODO: switch oncall to use individually managed MySQL instance
    externalMysql:
      host:
      port:
      db_name: oncall
      # Use an existing secret for the mysql password.
      existingSecret: mysql-credentials
      # The key in the secret containing the mysql username
      usernameKey: user
      # The key in the secret containing the mysql password
      passwordKey: password
    
    # TODO: switch oncall to use individually managed RabbitMQ instance
    externalRabbitmq:
      host:
      port:
      protocol:
      vhost:
      # Use an existing secret for the rabbitmq password
      existingSecret: rabbitmq-credentials
      # The key in the secret containing the rabbitmq password
      passwordKey: password
      # The key in the secret containing the rabbitmq username
      usernameKey: user

    # TODO: switch oncall to use individually managed Redis instance  
    externalRedis:
      protocol:
      host:
      port:

    grafana: 
      enabled: false

    cert-manager:
      enabled: false
    
    mariadb:
      enabled: false

    externalGrafana:
      url: http://grafana.monitoring.svc.cluster.local