---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  YAML_FILE: ./Packer/variables.sops.yaml
  VAR_FILE: ./Packer/variables.json

tasks:
  validate:
    desc: Validate templated configuration files
    cmd: packer validate -var-file="{{.VAR_FILE}}" ./Packer/VM-template/ubuntu-server-23.10.pkr.hcl

  # This step takes roughly ~10 - ~15 minutes to complete
  yaml-to-json:
    desc: Convert YAML to JSON
    cmds:
      - yq eval '.' {{.YAML_FILE}} -j > {{.VAR_FILE}}

  build:
    desc: Build VM template
    cmds:
      - task packer:decrypt
      - task packer:yaml-to-json
      - task packer:validate
      - packer build -var-file="{{.VAR_FILE}}" ./Packer/VM-template/ubuntu-server-23.10.pkr.hcl
    preconditions:
      - cmds:
        - task validate

  encrypt:
    desc: Encrypt all Packer SOPS secrets that are not already encrypted
    cmds:
      - for: { var: file }
        task: .encrypt-file
        vars:
          file: "{{.ITEM}}"
    vars:
      file:
        sh: find "{{.PACKER_DIR}}" -type f -name "*.sops.*" -exec grep -L "ENC\[AES256_GCM" {} \;

  decrypt:
    desc: Decrypt all Packer SOPS secrets that are encrypted
    cmds:
      - for: { var: file }
        task: .decrypt-file
        vars:
          file: "{{.ITEM}}"
    vars:
      file:
        sh: find "{{.PACKER_DIR}}" -type f -name "*.sops.*" -exec grep -l "ENC\[AES256_GCM" {} \;


  .encrypt-file:
    internal: true
    cmd: sops --encrypt --in-place {{.file}}
    requires:
      vars: ["file"]
    preconditions:
      - { msg: "Missing Sops config file", sh: "test -f {{.SOPS_CONFIG_FILE}}" }
      - { msg: "Missing Sops Age key file", sh: "test -f {{.SOPS_AGE_FILE}}" }

  .decrypt-file:
    internal: true
    cmd: sops --decrypt --in-place {{.file}}
    requires:
      vars: ["file"]
    preconditions:
      - { msg: "Missing Sops config file", sh: "test -f {{.SOPS_CONFIG_FILE}}" }
      - { msg: "Missing Sops Age key file", sh: "test -f {{.SOPS_AGE_FILE}}" }


