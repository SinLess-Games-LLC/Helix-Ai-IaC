variable "cloudinit_template_name" {
    type = string
}

variable "proxmox_node" {
    type = string
}

variable "ssh_key" {
  type = string
  sensitive = true
}

##################################################################################
# LOCALS
##################################################################################

locals {
  buildtime = formatdate("MM-DD-YYYY hh:mm ZZZ", timestamp())
}

resource "proxmox_vm_qemu" "k8s-master-1" {
  count = #{ bootstrap_nodes.master|length }#
  name = "k8s-master-1${count.index + 1}"
  desc = "Kubernetes Master Node${count.index + 1}, created by Terraform on ${local.buildtime}"
  target_node = var.proxmox_node
  clone = var.cloudinit_template_name
  agent = 1
  os_type = "cloud-init"
  cores = 4
  sockets = 1
  cpu = "host"
  memory = 4096
  scsihw = "virtio-scsi-pci"
  bootdisk = "scsi0"

  disk {
    slot = 0
    size = "40G"
    type = "scsi"
    storage = "pve1"
  }

  network {
    model = "virtio"
    bridge = "vmbr2"
  }

  lifecycle {
    ignore_changes = [
      network,
    ]
  }

  ipconfig0 = "ip=#{ system.cidr[:-4] }#.10${count.index + 1}/24,gw=#{ system.gateway_addr }#"
  nameserver = "#{ system.nameserver }#"

  sshkeys = <<EOF
  ${var.ssh_key}
  EOF

}

resource "proxmox_vm_qemu" "k8s-worker-1" {
  count = #{ bootstrap_nodes.worker|length }#
  name = "k8s-worker-1${count.index + 1}"
  desc = "Kubernetes Worker Node${count.index + 1}, created by Terraform on ${local.buildtime}"
  target_node = var.proxmox_node
  clone = var.cloudinit_template_name
  agent = 1
  os_type = "cloud-init"
  cores = 4
  sockets = 1
  cpu = "host"
  memory = 4096
  scsihw = "virtio-scsi-pci"
  bootdisk = "scsi0"

  disk {
    slot = 0
    size = "40G"
    type = "scsi"
    storage = "pve1"
  }

  network {
    model = "virtio"
    bridge = "vmbr2"
  }

  lifecycle {
    ignore_changes = [
      network,
    ]
  }

  ipconfig0 = "ip=#{ system.cidr[:-4] }#.10${count.index + 1}/24,gw=#{ system.gateway_addr }#"
  nameserver = "#{ system.nameserver }#"

  sshkeys = <<EOF
  ${var.ssh_key}
  EOF

}
